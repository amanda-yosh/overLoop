declare type IdRequest = string | string;
declare type TextRequest = string;
declare type RichTextItemRequest = {
    text: {
        content: string;
        link?: {
            url: TextRequest;
        } | null;
    };
    type?: "text";
    annotations?: {
        bold?: boolean;
        italic?: boolean;
        strikethrough?: boolean;
        underline?: boolean;
        code?: boolean;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
    };
} | {
    mention: {
        user: {
            id: IdRequest;
        } | {
            person: {
                email: string;
            };
            id: IdRequest;
            type?: "person";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        } | {
            bot: Record<string, never>;
            id: IdRequest;
            type?: "bot";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        };
    } | {
        date: {
            start: string;
            end?: string | null;
        };
    } | {
        page: {
            id: IdRequest;
        };
    } | {
        database: {
            id: IdRequest;
        };
    };
    type?: "mention";
    annotations?: {
        bold?: boolean;
        italic?: boolean;
        strikethrough?: boolean;
        underline?: boolean;
        code?: boolean;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
    };
} | {
    equation: {
        expression: TextRequest;
    };
    type?: "equation";
    annotations?: {
        bold?: boolean;
        italic?: boolean;
        strikethrough?: boolean;
        underline?: boolean;
        code?: boolean;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
    };
};
declare type StringRequest = string;
declare type BlockObjectRequest = {
    heading_1: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_1";
    object?: "block";
} | {
    heading_2: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_2";
    object?: "block";
} | {
    heading_3: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_3";
    object?: "block";
} | {
    embed: {
        url: string;
        caption?: Array<RichTextItemRequest>;
    };
    type?: "embed";
    object?: "block";
} | {
    bookmark: {
        url: string;
        caption?: Array<RichTextItemRequest>;
    };
    type?: "bookmark";
    object?: "block";
} | {
    image: {
        external: {
            url: string;
        };
        type?: "external";
        caption?: Array<RichTextItemRequest>;
    };
    type?: "image";
    object?: "block";
} | {
    video: {
        external: {
            url: string;
        };
        type?: "external";
        caption?: Array<RichTextItemRequest>;
    };
    type?: "video";
    object?: "block";
} | {
    pdf: {
        external: {
            url: string;
        };
        type?: "external";
        caption?: Array<RichTextItemRequest>;
    };
    type?: "pdf";
    object?: "block";
} | {
    file: {
        external: {
            url: string;
        };
        type?: "external";
        caption?: Array<RichTextItemRequest>;
    };
    type?: "file";
    object?: "block";
} | {
    audio: {
        external: {
            url: string;
        };
        type?: "external";
        caption?: Array<RichTextItemRequest>;
    };
    type?: "audio";
    object?: "block";
} | {
    code: {
        text: Array<RichTextItemRequest>;
        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
    };
    type?: "code";
    object?: "block";
} | {
    paragraph: {
        text: Array<RichTextItemRequest>;
        children?: Array<{
            heading_1: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_1";
            object?: "block";
        } | {
            heading_2: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_2";
            object?: "block";
        } | {
            heading_3: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_3";
            object?: "block";
        } | {
            embed: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "embed";
            object?: "block";
        } | {
            bookmark: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "bookmark";
            object?: "block";
        } | {
            image: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "image";
            object?: "block";
        } | {
            video: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "video";
            object?: "block";
        } | {
            pdf: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "pdf";
            object?: "block";
        } | {
            file: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "file";
            object?: "block";
        } | {
            audio: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "audio";
            object?: "block";
        } | {
            code: {
                text: Array<RichTextItemRequest>;
                language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
            };
            type?: "code";
            object?: "block";
        } | {
            paragraph: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "paragraph";
            object?: "block";
        } | {
            bulleted_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "bulleted_list_item";
            object?: "block";
        } | {
            numbered_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "numbered_list_item";
            object?: "block";
        } | {
            to_do: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
                checked?: boolean;
            };
            type?: "to_do";
            object?: "block";
        } | {
            toggle: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "toggle";
            object?: "block";
        }>;
    };
    type?: "paragraph";
    object?: "block";
} | {
    bulleted_list_item: {
        text: Array<RichTextItemRequest>;
        children?: Array<{
            heading_1: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_1";
            object?: "block";
        } | {
            heading_2: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_2";
            object?: "block";
        } | {
            heading_3: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_3";
            object?: "block";
        } | {
            embed: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "embed";
            object?: "block";
        } | {
            bookmark: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "bookmark";
            object?: "block";
        } | {
            image: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "image";
            object?: "block";
        } | {
            video: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "video";
            object?: "block";
        } | {
            pdf: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "pdf";
            object?: "block";
        } | {
            file: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "file";
            object?: "block";
        } | {
            audio: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "audio";
            object?: "block";
        } | {
            code: {
                text: Array<RichTextItemRequest>;
                language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
            };
            type?: "code";
            object?: "block";
        } | {
            paragraph: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "paragraph";
            object?: "block";
        } | {
            bulleted_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "bulleted_list_item";
            object?: "block";
        } | {
            numbered_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "numbered_list_item";
            object?: "block";
        } | {
            to_do: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
                checked?: boolean;
            };
            type?: "to_do";
            object?: "block";
        } | {
            toggle: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "toggle";
            object?: "block";
        }>;
    };
    type?: "bulleted_list_item";
    object?: "block";
} | {
    numbered_list_item: {
        text: Array<RichTextItemRequest>;
        children?: Array<{
            heading_1: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_1";
            object?: "block";
        } | {
            heading_2: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_2";
            object?: "block";
        } | {
            heading_3: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_3";
            object?: "block";
        } | {
            embed: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "embed";
            object?: "block";
        } | {
            bookmark: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "bookmark";
            object?: "block";
        } | {
            image: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "image";
            object?: "block";
        } | {
            video: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "video";
            object?: "block";
        } | {
            pdf: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "pdf";
            object?: "block";
        } | {
            file: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "file";
            object?: "block";
        } | {
            audio: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "audio";
            object?: "block";
        } | {
            code: {
                text: Array<RichTextItemRequest>;
                language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
            };
            type?: "code";
            object?: "block";
        } | {
            paragraph: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "paragraph";
            object?: "block";
        } | {
            bulleted_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "bulleted_list_item";
            object?: "block";
        } | {
            numbered_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "numbered_list_item";
            object?: "block";
        } | {
            to_do: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
                checked?: boolean;
            };
            type?: "to_do";
            object?: "block";
        } | {
            toggle: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "toggle";
            object?: "block";
        }>;
    };
    type?: "numbered_list_item";
    object?: "block";
} | {
    to_do: {
        text: Array<RichTextItemRequest>;
        children?: Array<{
            heading_1: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_1";
            object?: "block";
        } | {
            heading_2: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_2";
            object?: "block";
        } | {
            heading_3: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_3";
            object?: "block";
        } | {
            embed: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "embed";
            object?: "block";
        } | {
            bookmark: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "bookmark";
            object?: "block";
        } | {
            image: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "image";
            object?: "block";
        } | {
            video: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "video";
            object?: "block";
        } | {
            pdf: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "pdf";
            object?: "block";
        } | {
            file: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "file";
            object?: "block";
        } | {
            audio: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "audio";
            object?: "block";
        } | {
            code: {
                text: Array<RichTextItemRequest>;
                language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
            };
            type?: "code";
            object?: "block";
        } | {
            paragraph: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "paragraph";
            object?: "block";
        } | {
            bulleted_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "bulleted_list_item";
            object?: "block";
        } | {
            numbered_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "numbered_list_item";
            object?: "block";
        } | {
            to_do: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
                checked?: boolean;
            };
            type?: "to_do";
            object?: "block";
        } | {
            toggle: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "toggle";
            object?: "block";
        }>;
        checked?: boolean;
    };
    type?: "to_do";
    object?: "block";
} | {
    toggle: {
        text: Array<RichTextItemRequest>;
        children?: Array<{
            heading_1: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_1";
            object?: "block";
        } | {
            heading_2: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_2";
            object?: "block";
        } | {
            heading_3: {
                text: Array<RichTextItemRequest>;
            };
            type?: "heading_3";
            object?: "block";
        } | {
            embed: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "embed";
            object?: "block";
        } | {
            bookmark: {
                url: string;
                caption?: Array<RichTextItemRequest>;
            };
            type?: "bookmark";
            object?: "block";
        } | {
            image: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "image";
            object?: "block";
        } | {
            video: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "video";
            object?: "block";
        } | {
            pdf: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "pdf";
            object?: "block";
        } | {
            file: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "file";
            object?: "block";
        } | {
            audio: {
                external: {
                    url: string;
                };
                type?: "external";
                caption?: Array<RichTextItemRequest>;
            };
            type?: "audio";
            object?: "block";
        } | {
            code: {
                text: Array<RichTextItemRequest>;
                language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
            };
            type?: "code";
            object?: "block";
        } | {
            paragraph: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "paragraph";
            object?: "block";
        } | {
            bulleted_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "bulleted_list_item";
            object?: "block";
        } | {
            numbered_list_item: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "numbered_list_item";
            object?: "block";
        } | {
            to_do: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
                checked?: boolean;
            };
            type?: "to_do";
            object?: "block";
        } | {
            toggle: {
                text: Array<RichTextItemRequest>;
                children?: Array<{
                    heading_1: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_1";
                    object?: "block";
                } | {
                    heading_2: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_2";
                    object?: "block";
                } | {
                    heading_3: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "heading_3";
                    object?: "block";
                } | {
                    embed: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "embed";
                    object?: "block";
                } | {
                    bookmark: {
                        url: string;
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "bookmark";
                    object?: "block";
                } | {
                    image: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "image";
                    object?: "block";
                } | {
                    video: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "video";
                    object?: "block";
                } | {
                    pdf: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "pdf";
                    object?: "block";
                } | {
                    file: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "file";
                    object?: "block";
                } | {
                    audio: {
                        external: {
                            url: string;
                        };
                        type?: "external";
                        caption?: Array<RichTextItemRequest>;
                    };
                    type?: "audio";
                    object?: "block";
                } | {
                    code: {
                        text: Array<RichTextItemRequest>;
                        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
                    };
                    type?: "code";
                    object?: "block";
                } | {
                    paragraph: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "paragraph";
                    object?: "block";
                } | {
                    bulleted_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "bulleted_list_item";
                    object?: "block";
                } | {
                    numbered_list_item: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "numbered_list_item";
                    object?: "block";
                } | {
                    to_do: {
                        text: Array<RichTextItemRequest>;
                        checked?: boolean;
                    };
                    type?: "to_do";
                    object?: "block";
                } | {
                    toggle: {
                        text: Array<RichTextItemRequest>;
                    };
                    type?: "toggle";
                    object?: "block";
                }>;
            };
            type?: "toggle";
            object?: "block";
        }>;
    };
    type?: "toggle";
    object?: "block";
};
declare type GetUserPathParameters = {
    user_id: IdRequest;
};
export declare type GetUserParameters = GetUserPathParameters;
export declare type GetUserResponse = {
    type: "person";
    person: {
        email: string;
    };
    name: string | null;
    avatar_url: string | null;
    id: IdRequest;
    object: "user";
} | {
    type: "bot";
    bot: Record<string, never>;
    name: string | null;
    avatar_url: string | null;
    id: IdRequest;
    object: "user";
};
export declare const getUser: {
    readonly method: "get";
    readonly pathParams: readonly ["user_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: GetUserPathParameters) => string;
};
declare type ListUsersQueryParameters = {
    start_cursor?: string;
    page_size?: number;
};
export declare type ListUsersParameters = ListUsersQueryParameters;
export declare type ListUsersResponse = {
    object: "list";
    results: Array<{
        type: "person";
        person: {
            email: string;
        };
        name: string | null;
        avatar_url: string | null;
        id: IdRequest;
        object: "user";
    } | {
        type: "bot";
        bot: Record<string, never>;
        name: string | null;
        avatar_url: string | null;
        id: IdRequest;
        object: "user";
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const listUsers: {
    readonly method: "get";
    readonly pathParams: readonly [];
    readonly queryParams: readonly ["start_cursor", "page_size"];
    readonly bodyParams: readonly [];
    readonly path: () => string;
};
declare type CreatePageBodyParameters = {
    parent: {
        database_id: IdRequest;
    };
    properties: Record<string, {
        title: Array<RichTextItemRequest>;
        type?: "title";
    } | {
        rich_text: Array<RichTextItemRequest>;
        type?: "rich_text";
    } | {
        number: number | null;
        type?: "number";
    } | {
        url: TextRequest | null;
        type?: "url";
    } | {
        select: {
            id: StringRequest;
            name?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | null | {
            name: StringRequest;
            id?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | null;
        type?: "select";
    } | {
        multi_select: Array<{
            id: StringRequest;
            name?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | {
            name: StringRequest;
            id?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        }>;
        type?: "multi_select";
    } | {
        people: Array<{
            id: IdRequest;
        } | {
            person: {
                email: string;
            };
            id: IdRequest;
            type?: "person";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        } | {
            bot: Record<string, never>;
            id: IdRequest;
            type?: "bot";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        }>;
        type?: "people";
    } | {
        email: StringRequest | null;
        type?: "email";
    } | {
        phone_number: StringRequest | null;
        type?: "phone_number";
    } | {
        date: {
            start: string;
            end?: string | null;
        } | null;
        type?: "date";
    } | {
        checkbox: boolean;
        type?: "checkbox";
    } | {
        relation: Array<{
            id: IdRequest;
        }>;
        type?: "relation";
    } | {
        files: Array<{
            file: {
                url: string;
                expiry_time?: string;
            };
            name: string;
            type?: "file";
        } | {
            external: {
                url: string;
            };
            name: string;
            type?: "external";
        }>;
        type?: "files";
    }> | Record<string, Array<RichTextItemRequest> | Array<RichTextItemRequest> | number | null | TextRequest | null | {
        id: StringRequest;
        name?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | null | {
        name: StringRequest;
        id?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | null | Array<{
        id: StringRequest;
        name?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | {
        name: StringRequest;
        id?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    }> | Array<{
        id: IdRequest;
    } | {
        person: {
            email: string;
        };
        id: IdRequest;
        type?: "person";
        name?: string | null;
        avatar_url?: string | null;
        object?: "user";
    } | {
        bot: Record<string, never>;
        id: IdRequest;
        type?: "bot";
        name?: string | null;
        avatar_url?: string | null;
        object?: "user";
    }> | StringRequest | null | StringRequest | null | {
        start: string;
        end?: string | null;
    } | null | boolean | Array<{
        id: IdRequest;
    }> | Array<{
        file: {
            url: string;
            expiry_time?: string;
        };
        name: string;
        type?: "file";
    } | {
        external: {
            url: string;
        };
        name: string;
        type?: "external";
    }>>;
    icon?: {
        emoji: string;
        type?: "emoji";
    } | null | {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    cover?: {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    content?: Array<BlockObjectRequest>;
    children?: Array<BlockObjectRequest>;
} | {
    parent: {
        page_id: IdRequest;
    };
    properties: {
        title?: Record<string, Array<RichTextItemRequest>> | Array<RichTextItemRequest>;
    };
    icon?: {
        emoji: string;
        type?: "emoji";
    } | null | {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    cover?: {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    children?: Array<BlockObjectRequest>;
};
export declare type CreatePageParameters = CreatePageBodyParameters;
export declare type CreatePageResponse = {
    parent: {
        type: "database_id";
        database_id: IdRequest;
    } | {
        type: "page_id";
        page_id: IdRequest;
    } | {
        type: "workspace";
        workspace: true;
    };
    properties: Record<string, {
        type: "title";
        title: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "rich_text";
        rich_text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "number";
        number: number;
        id: string;
    } | {
        type: "url";
        url: string;
        id: string;
    } | {
        type: "select";
        select: {
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        };
        id: string;
    } | {
        type: "multi_select";
        multi_select: Array<{
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        }>;
        id: string;
    } | {
        type: "people";
        people: Array<{
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        }>;
        id: string;
    } | {
        type: "email";
        email: string;
        id: string;
    } | {
        type: "phone_number";
        phone_number: string;
        id: string;
    } | {
        type: "date";
        date: {
            start: string;
            end: string | null;
        };
        id: string;
    } | {
        type: "files";
        files: Array<{
            file: {
                url: string;
                expiry_time: string;
            };
            name: string;
            type?: "file";
        } | {
            external: {
                url: string;
            };
            name: string;
            type?: "external";
        }>;
        id: string;
    } | {
        type: "checkbox";
        checkbox: boolean;
        id: string;
    } | {
        type: "formula";
        formula: {
            type: "string";
            string: string | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "number";
            number: number | null;
        } | {
            type: "boolean";
            boolean: boolean | null;
        };
        id: string;
    } | {
        type: "relation";
        relation: Array<{
            id: string;
        }>;
        id: string;
    } | {
        type: "rollup";
        rollup: {
            type: "number";
            number: number | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "array";
            array: Array<{
                type: "number";
                number: {
                    format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
                };
            } | {
                type: "formula";
                formula: {
                    expression: string;
                };
            } | {
                type: "select";
                select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "multi_select";
                multi_select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "relation";
                relation: {
                    database_id: IdRequest;
                    synced_property_id: string;
                    synced_property_name: string;
                };
            } | {
                type: "rollup";
                rollup: {
                    rollup_property_name: string;
                    relation_property_name: string;
                    rollup_property_id: string;
                    relation_property_id: string;
                    function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
                };
            } | {
                type: "title";
                title: Record<string, never>;
            } | {
                type: "rich_text";
                rich_text: Record<string, never>;
            } | {
                type: "url";
                url: Record<string, never>;
            } | {
                type: "people";
                people: Record<string, never>;
            } | {
                type: "files";
                files: Record<string, never>;
            } | {
                type: "email";
                email: Record<string, never>;
            } | {
                type: "phone_number";
                phone_number: Record<string, never>;
            } | {
                type: "date";
                date: Record<string, never>;
            } | {
                type: "checkbox";
                checkbox: Record<string, never>;
            } | {
                type: "created_by";
                created_by: Record<string, never>;
            } | {
                type: "created_time";
                created_time: Record<string, never>;
            } | {
                type: "last_edited_by";
                last_edited_by: Record<string, never>;
            } | {
                type: "last_edited_time";
                last_edited_time: Record<string, never>;
            }>;
        };
        id: string;
    } | {
        type: "created_time";
        created_time: string;
        id: string;
    } | {
        type: "created_by";
        created_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    } | {
        type: "last_edited_time";
        last_edited_time: string;
        id: string;
    } | {
        type: "last_edited_by";
        last_edited_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    object: "page";
    id: string;
    created_time: string;
    last_edited_time: string;
    archived: boolean;
    url: string;
};
export declare const createPage: {
    readonly method: "post";
    readonly pathParams: readonly [];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["parent", "properties", "icon", "cover", "content", "children"];
    readonly path: () => string;
};
declare type GetPagePathParameters = {
    page_id: IdRequest;
};
export declare type GetPageParameters = GetPagePathParameters;
export declare type GetPageResponse = {
    parent: {
        type: "database_id";
        database_id: IdRequest;
    } | {
        type: "page_id";
        page_id: IdRequest;
    } | {
        type: "workspace";
        workspace: true;
    };
    properties: Record<string, {
        type: "title";
        title: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "rich_text";
        rich_text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "number";
        number: number;
        id: string;
    } | {
        type: "url";
        url: string;
        id: string;
    } | {
        type: "select";
        select: {
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        };
        id: string;
    } | {
        type: "multi_select";
        multi_select: Array<{
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        }>;
        id: string;
    } | {
        type: "people";
        people: Array<{
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        }>;
        id: string;
    } | {
        type: "email";
        email: string;
        id: string;
    } | {
        type: "phone_number";
        phone_number: string;
        id: string;
    } | {
        type: "date";
        date: {
            start: string;
            end: string | null;
        };
        id: string;
    } | {
        type: "files";
        files: Array<{
            file: {
                url: string;
                expiry_time: string;
            };
            name: string;
            type?: "file";
        } | {
            external: {
                url: string;
            };
            name: string;
            type?: "external";
        }>;
        id: string;
    } | {
        type: "checkbox";
        checkbox: boolean;
        id: string;
    } | {
        type: "formula";
        formula: {
            type: "string";
            string: string | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "number";
            number: number | null;
        } | {
            type: "boolean";
            boolean: boolean | null;
        };
        id: string;
    } | {
        type: "relation";
        relation: Array<{
            id: string;
        }>;
        id: string;
    } | {
        type: "rollup";
        rollup: {
            type: "number";
            number: number | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "array";
            array: Array<{
                type: "number";
                number: {
                    format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
                };
            } | {
                type: "formula";
                formula: {
                    expression: string;
                };
            } | {
                type: "select";
                select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "multi_select";
                multi_select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "relation";
                relation: {
                    database_id: IdRequest;
                    synced_property_id: string;
                    synced_property_name: string;
                };
            } | {
                type: "rollup";
                rollup: {
                    rollup_property_name: string;
                    relation_property_name: string;
                    rollup_property_id: string;
                    relation_property_id: string;
                    function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
                };
            } | {
                type: "title";
                title: Record<string, never>;
            } | {
                type: "rich_text";
                rich_text: Record<string, never>;
            } | {
                type: "url";
                url: Record<string, never>;
            } | {
                type: "people";
                people: Record<string, never>;
            } | {
                type: "files";
                files: Record<string, never>;
            } | {
                type: "email";
                email: Record<string, never>;
            } | {
                type: "phone_number";
                phone_number: Record<string, never>;
            } | {
                type: "date";
                date: Record<string, never>;
            } | {
                type: "checkbox";
                checkbox: Record<string, never>;
            } | {
                type: "created_by";
                created_by: Record<string, never>;
            } | {
                type: "created_time";
                created_time: Record<string, never>;
            } | {
                type: "last_edited_by";
                last_edited_by: Record<string, never>;
            } | {
                type: "last_edited_time";
                last_edited_time: Record<string, never>;
            }>;
        };
        id: string;
    } | {
        type: "created_time";
        created_time: string;
        id: string;
    } | {
        type: "created_by";
        created_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    } | {
        type: "last_edited_time";
        last_edited_time: string;
        id: string;
    } | {
        type: "last_edited_by";
        last_edited_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    object: "page";
    id: string;
    created_time: string;
    last_edited_time: string;
    archived: boolean;
    url: string;
};
export declare const getPage: {
    readonly method: "get";
    readonly pathParams: readonly ["page_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: GetPagePathParameters) => string;
};
declare type UpdatePagePathParameters = {
    page_id: IdRequest;
};
declare type UpdatePageBodyParameters = {
    properties?: Record<string, {
        title: Array<RichTextItemRequest>;
        type?: "title";
    } | {
        rich_text: Array<RichTextItemRequest>;
        type?: "rich_text";
    } | {
        number: number | null;
        type?: "number";
    } | {
        url: TextRequest | null;
        type?: "url";
    } | {
        select: {
            id: StringRequest;
            name?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | null | {
            name: StringRequest;
            id?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | null;
        type?: "select";
    } | {
        multi_select: Array<{
            id: StringRequest;
            name?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        } | {
            name: StringRequest;
            id?: StringRequest;
            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        }>;
        type?: "multi_select";
    } | {
        people: Array<{
            id: IdRequest;
        } | {
            person: {
                email: string;
            };
            id: IdRequest;
            type?: "person";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        } | {
            bot: Record<string, never>;
            id: IdRequest;
            type?: "bot";
            name?: string | null;
            avatar_url?: string | null;
            object?: "user";
        }>;
        type?: "people";
    } | {
        email: StringRequest | null;
        type?: "email";
    } | {
        phone_number: StringRequest | null;
        type?: "phone_number";
    } | {
        date: {
            start: string;
            end?: string | null;
        } | null;
        type?: "date";
    } | {
        checkbox: boolean;
        type?: "checkbox";
    } | {
        relation: Array<{
            id: IdRequest;
        }>;
        type?: "relation";
    } | {
        files: Array<{
            file: {
                url: string;
                expiry_time?: string;
            };
            name: string;
            type?: "file";
        } | {
            external: {
                url: string;
            };
            name: string;
            type?: "external";
        }>;
        type?: "files";
    }> | Record<string, Array<RichTextItemRequest> | Array<RichTextItemRequest> | number | null | TextRequest | null | {
        id: StringRequest;
        name?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | null | {
        name: StringRequest;
        id?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | null | Array<{
        id: StringRequest;
        name?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    } | {
        name: StringRequest;
        id?: StringRequest;
        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
    }> | Array<{
        id: IdRequest;
    } | {
        person: {
            email: string;
        };
        id: IdRequest;
        type?: "person";
        name?: string | null;
        avatar_url?: string | null;
        object?: "user";
    } | {
        bot: Record<string, never>;
        id: IdRequest;
        type?: "bot";
        name?: string | null;
        avatar_url?: string | null;
        object?: "user";
    }> | StringRequest | null | StringRequest | null | {
        start: string;
        end?: string | null;
    } | null | boolean | Array<{
        id: IdRequest;
    }> | Array<{
        file: {
            url: string;
            expiry_time?: string;
        };
        name: string;
        type?: "file";
    } | {
        external: {
            url: string;
        };
        name: string;
        type?: "external";
    }>>;
    icon?: {
        emoji: string;
        type?: "emoji";
    } | null | {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    cover?: {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    archived?: boolean;
};
export declare type UpdatePageParameters = UpdatePagePathParameters & UpdatePageBodyParameters;
export declare type UpdatePageResponse = {
    parent: {
        type: "database_id";
        database_id: IdRequest;
    } | {
        type: "page_id";
        page_id: IdRequest;
    } | {
        type: "workspace";
        workspace: true;
    };
    properties: Record<string, {
        type: "title";
        title: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "rich_text";
        rich_text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        id: string;
    } | {
        type: "number";
        number: number;
        id: string;
    } | {
        type: "url";
        url: string;
        id: string;
    } | {
        type: "select";
        select: {
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        };
        id: string;
    } | {
        type: "multi_select";
        multi_select: Array<{
            id: StringRequest;
            name: StringRequest;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
        }>;
        id: string;
    } | {
        type: "people";
        people: Array<{
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        }>;
        id: string;
    } | {
        type: "email";
        email: string;
        id: string;
    } | {
        type: "phone_number";
        phone_number: string;
        id: string;
    } | {
        type: "date";
        date: {
            start: string;
            end: string | null;
        };
        id: string;
    } | {
        type: "files";
        files: Array<{
            file: {
                url: string;
                expiry_time: string;
            };
            name: string;
            type?: "file";
        } | {
            external: {
                url: string;
            };
            name: string;
            type?: "external";
        }>;
        id: string;
    } | {
        type: "checkbox";
        checkbox: boolean;
        id: string;
    } | {
        type: "formula";
        formula: {
            type: "string";
            string: string | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "number";
            number: number | null;
        } | {
            type: "boolean";
            boolean: boolean | null;
        };
        id: string;
    } | {
        type: "relation";
        relation: Array<{
            id: string;
        }>;
        id: string;
    } | {
        type: "rollup";
        rollup: {
            type: "number";
            number: number | null;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            } | null;
        } | {
            type: "array";
            array: Array<{
                type: "number";
                number: {
                    format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
                };
            } | {
                type: "formula";
                formula: {
                    expression: string;
                };
            } | {
                type: "select";
                select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "multi_select";
                multi_select: {
                    options: Array<{
                        name: StringRequest;
                        id?: StringRequest;
                        color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                    }>;
                };
            } | {
                type: "relation";
                relation: {
                    database_id: IdRequest;
                    synced_property_id: string;
                    synced_property_name: string;
                };
            } | {
                type: "rollup";
                rollup: {
                    rollup_property_name: string;
                    relation_property_name: string;
                    rollup_property_id: string;
                    relation_property_id: string;
                    function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
                };
            } | {
                type: "title";
                title: Record<string, never>;
            } | {
                type: "rich_text";
                rich_text: Record<string, never>;
            } | {
                type: "url";
                url: Record<string, never>;
            } | {
                type: "people";
                people: Record<string, never>;
            } | {
                type: "files";
                files: Record<string, never>;
            } | {
                type: "email";
                email: Record<string, never>;
            } | {
                type: "phone_number";
                phone_number: Record<string, never>;
            } | {
                type: "date";
                date: Record<string, never>;
            } | {
                type: "checkbox";
                checkbox: Record<string, never>;
            } | {
                type: "created_by";
                created_by: Record<string, never>;
            } | {
                type: "created_time";
                created_time: Record<string, never>;
            } | {
                type: "last_edited_by";
                last_edited_by: Record<string, never>;
            } | {
                type: "last_edited_time";
                last_edited_time: Record<string, never>;
            }>;
        };
        id: string;
    } | {
        type: "created_time";
        created_time: string;
        id: string;
    } | {
        type: "created_by";
        created_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    } | {
        type: "last_edited_time";
        last_edited_time: string;
        id: string;
    } | {
        type: "last_edited_by";
        last_edited_by: {
            id: IdRequest;
            object: "user";
        } | {
            type: "person";
            person: {
                email: string;
            };
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        } | {
            type: "bot";
            bot: Record<string, never>;
            name: string | null;
            avatar_url: string | null;
            id: IdRequest;
            object: "user";
        };
        id: string;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    object: "page";
    id: string;
    created_time: string;
    last_edited_time: string;
    archived: boolean;
    url: string;
};
export declare const updatePage: {
    readonly method: "patch";
    readonly pathParams: readonly ["page_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["properties", "icon", "cover", "archived"];
    readonly path: (p: UpdatePagePathParameters) => string;
};
declare type GetBlockPathParameters = {
    block_id: IdRequest;
};
export declare type GetBlockParameters = GetBlockPathParameters;
export declare type GetBlockResponse = {
    type: "paragraph";
    paragraph: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_1";
    heading_1: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_2";
    heading_2: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_3";
    heading_3: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bulleted_list_item";
    bulleted_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "numbered_list_item";
    numbered_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "to_do";
    to_do: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        checked: boolean;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "toggle";
    toggle: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_page";
    child_page: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_database";
    child_database: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "code";
    code: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "embed";
    embed: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bookmark";
    bookmark: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "image";
    image: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "video";
    video: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "pdf";
    pdf: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "file";
    file: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "audio";
    audio: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "unsupported";
    unsupported: Record<string, never>;
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
};
export declare const getBlock: {
    readonly method: "get";
    readonly pathParams: readonly ["block_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: GetBlockPathParameters) => string;
};
declare type UpdateBlockPathParameters = {
    block_id: IdRequest;
};
declare type UpdateBlockBodyParameters = {
    paragraph: {
        text: Array<RichTextItemRequest>;
    };
    type?: "paragraph";
    archived?: boolean;
} | {
    heading_1: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_1";
    archived?: boolean;
} | {
    heading_2: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_2";
    archived?: boolean;
} | {
    heading_3: {
        text: Array<RichTextItemRequest>;
    };
    type?: "heading_3";
    archived?: boolean;
} | {
    bulleted_list_item: {
        text: Array<RichTextItemRequest>;
    };
    type?: "bulleted_list_item";
    archived?: boolean;
} | {
    numbered_list_item: {
        text: Array<RichTextItemRequest>;
    };
    type?: "numbered_list_item";
    archived?: boolean;
} | {
    to_do: {
        text?: Array<RichTextItemRequest>;
        checked?: boolean;
    };
    type?: "to_do";
    archived?: boolean;
} | {
    toggle: {
        text: Array<RichTextItemRequest>;
    };
    type?: "toggle";
    archived?: boolean;
} | {
    code: {
        text: Array<RichTextItemRequest>;
        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
    };
    type?: "code";
    archived?: boolean;
} | {
    archived?: boolean;
};
export declare type UpdateBlockParameters = UpdateBlockPathParameters & UpdateBlockBodyParameters;
export declare type UpdateBlockResponse = {
    type: "paragraph";
    paragraph: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_1";
    heading_1: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_2";
    heading_2: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_3";
    heading_3: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bulleted_list_item";
    bulleted_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "numbered_list_item";
    numbered_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "to_do";
    to_do: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        checked: boolean;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "toggle";
    toggle: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_page";
    child_page: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_database";
    child_database: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "code";
    code: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "embed";
    embed: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bookmark";
    bookmark: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "image";
    image: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "video";
    video: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "pdf";
    pdf: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "file";
    file: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "audio";
    audio: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "unsupported";
    unsupported: Record<string, never>;
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
};
export declare const updateBlock: {
    readonly method: "patch";
    readonly pathParams: readonly ["block_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["paragraph", "type", "archived", "heading_1", "heading_2", "heading_3", "bulleted_list_item", "numbered_list_item", "to_do", "toggle", "code"];
    readonly path: (p: UpdateBlockPathParameters) => string;
};
declare type DeleteBlockPathParameters = {
    block_id: IdRequest;
};
export declare type DeleteBlockParameters = DeleteBlockPathParameters;
export declare type DeleteBlockResponse = {
    type: "paragraph";
    paragraph: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_1";
    heading_1: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_2";
    heading_2: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "heading_3";
    heading_3: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bulleted_list_item";
    bulleted_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "numbered_list_item";
    numbered_list_item: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "to_do";
    to_do: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        checked: boolean;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "toggle";
    toggle: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_page";
    child_page: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "child_database";
    child_database: {
        title: string;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "code";
    code: {
        text: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "embed";
    embed: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "bookmark";
    bookmark: {
        url: string;
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "image";
    image: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "video";
    video: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "pdf";
    pdf: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "file";
    file: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "audio";
    audio: {
        type: "external";
        external: {
            url: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    } | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
        caption: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
    };
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
} | {
    type: "unsupported";
    unsupported: Record<string, never>;
    object: "block";
    id: string;
    created_time: string;
    last_edited_time: string;
    has_children: boolean;
    archived: boolean;
};
export declare const deleteBlock: {
    readonly method: "delete";
    readonly pathParams: readonly ["block_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: DeleteBlockPathParameters) => string;
};
declare type ListBlockChildrenPathParameters = {
    block_id: IdRequest;
};
declare type ListBlockChildrenQueryParameters = {
    start_cursor?: string;
    page_size?: number;
};
export declare type ListBlockChildrenParameters = ListBlockChildrenPathParameters & ListBlockChildrenQueryParameters;
export declare type ListBlockChildrenResponse = {
    object: "list";
    results: Array<{
        type: "paragraph";
        paragraph: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_1";
        heading_1: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_2";
        heading_2: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_3";
        heading_3: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "bulleted_list_item";
        bulleted_list_item: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "numbered_list_item";
        numbered_list_item: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "to_do";
        to_do: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            checked: boolean;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "toggle";
        toggle: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "child_page";
        child_page: {
            title: string;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "child_database";
        child_database: {
            title: string;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "code";
        code: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "embed";
        embed: {
            url: string;
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "bookmark";
        bookmark: {
            url: string;
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "image";
        image: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "video";
        video: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "pdf";
        pdf: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "file";
        file: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "audio";
        audio: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "unsupported";
        unsupported: Record<string, never>;
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const listBlockChildren: {
    readonly method: "get";
    readonly pathParams: readonly ["block_id"];
    readonly queryParams: readonly ["start_cursor", "page_size"];
    readonly bodyParams: readonly [];
    readonly path: (p: ListBlockChildrenPathParameters) => string;
};
declare type AppendBlockChildrenPathParameters = {
    block_id: IdRequest;
};
declare type AppendBlockChildrenBodyParameters = {
    children: Array<BlockObjectRequest>;
};
export declare type AppendBlockChildrenParameters = AppendBlockChildrenPathParameters & AppendBlockChildrenBodyParameters;
export declare type AppendBlockChildrenResponse = {
    object: "list";
    results: Array<{
        type: "paragraph";
        paragraph: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_1";
        heading_1: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_2";
        heading_2: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "heading_3";
        heading_3: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "bulleted_list_item";
        bulleted_list_item: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "numbered_list_item";
        numbered_list_item: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "to_do";
        to_do: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            checked: boolean;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "toggle";
        toggle: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "child_page";
        child_page: {
            title: string;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "child_database";
        child_database: {
            title: string;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "code";
        code: {
            text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            language: "abap" | "arduino" | "bash" | "basic" | "c" | "clojure" | "coffeescript" | "c++" | "c#" | "css" | "dart" | "diff" | "docker" | "elixir" | "elm" | "erlang" | "flow" | "fortran" | "f#" | "gherkin" | "glsl" | "go" | "graphql" | "groovy" | "haskell" | "html" | "java" | "javascript" | "json" | "julia" | "kotlin" | "latex" | "less" | "lisp" | "livescript" | "lua" | "makefile" | "markdown" | "markup" | "matlab" | "mermaid" | "nix" | "objective-c" | "ocaml" | "pascal" | "perl" | "php" | "plain text" | "powershell" | "prolog" | "protobuf" | "python" | "r" | "reason" | "ruby" | "rust" | "sass" | "scala" | "scheme" | "scss" | "shell" | "sql" | "swift" | "typescript" | "vb.net" | "verilog" | "vhdl" | "visual basic" | "webassembly" | "xml" | "yaml" | "java/c/c++/c#";
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "embed";
        embed: {
            url: string;
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "bookmark";
        bookmark: {
            url: string;
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "image";
        image: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "video";
        video: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "pdf";
        pdf: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "file";
        file: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "audio";
        audio: {
            type: "external";
            external: {
                url: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        } | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
            caption: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
        };
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    } | {
        type: "unsupported";
        unsupported: Record<string, never>;
        object: "block";
        id: string;
        created_time: string;
        last_edited_time: string;
        has_children: boolean;
        archived: boolean;
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const appendBlockChildren: {
    readonly method: "patch";
    readonly pathParams: readonly ["block_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["children"];
    readonly path: (p: AppendBlockChildrenPathParameters) => string;
};
declare type GetDatabasePathParameters = {
    database_id: IdRequest;
};
export declare type GetDatabaseParameters = GetDatabasePathParameters;
export declare type GetDatabaseResponse = {
    title: Array<{
        type: "text";
        text: {
            content: string;
            link: {
                url: TextRequest;
            } | null;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "mention";
        mention: {
            type: "user";
            user: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            };
        } | {
            type: "page";
            page: {
                id: IdRequest;
            };
        } | {
            type: "database";
            database: {
                id: IdRequest;
            };
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "equation";
        equation: {
            expression: TextRequest;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    properties: Record<string, {
        type: "number";
        number: {
            format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
        };
        id: string;
        name: string;
    } | {
        type: "formula";
        formula: {
            expression: string;
        };
        id: string;
        name: string;
    } | {
        type: "select";
        select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "multi_select";
        multi_select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "relation";
        relation: {
            database_id: IdRequest;
            synced_property_id: string;
            synced_property_name: string;
        };
        id: string;
        name: string;
    } | {
        type: "rollup";
        rollup: {
            rollup_property_name: string;
            relation_property_name: string;
            rollup_property_id: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
        };
        id: string;
        name: string;
    } | {
        type: "title";
        title: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "rich_text";
        rich_text: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "url";
        url: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "people";
        people: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "files";
        files: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "email";
        email: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "phone_number";
        phone_number: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "date";
        date: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "checkbox";
        checkbox: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_by";
        created_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_time";
        created_time: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_by";
        last_edited_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_time";
        last_edited_time: Record<string, never>;
        id: string;
        name: string;
    }>;
    parent: {
        type: "page_id";
        page_id: string;
    } | {
        type: "workspace";
        workspace: true;
    };
    object: "database";
    id: string;
    created_time: string;
    last_edited_time: string;
    url: string;
};
export declare const getDatabase: {
    readonly method: "get";
    readonly pathParams: readonly ["database_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: GetDatabasePathParameters) => string;
};
declare type UpdateDatabasePathParameters = {
    database_id: IdRequest;
};
declare type UpdateDatabaseBodyParameters = {
    title?: Array<RichTextItemRequest>;
    icon?: {
        emoji: string;
        type?: "emoji";
    } | null | {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    cover?: {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    properties?: Record<string, {
        number: {
            format?: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
        };
        type?: "number";
        name?: string;
    } | null | {
        formula: {
            expression?: string;
        };
        type?: "formula";
        name?: string;
    } | null | {
        select: {
            options?: Array<{
                id: StringRequest;
                name?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            } | {
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        type?: "select";
        name?: string;
    } | null | {
        multi_select: {
            options?: Array<{
                id: StringRequest;
                name?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            } | {
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        type?: "multi_select";
        name?: string;
    } | null | {
        relation: {
            database_id: IdRequest;
            synced_property_id?: string;
            synced_property_name?: string;
        };
        type?: "relation";
        name?: string;
    } | null | {
        rollup: {
            rollup_property_name: string;
            relation_property_name: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_id?: string;
            relation_property_id?: string;
        } | {
            rollup_property_name: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            relation_property_name?: string;
            rollup_property_id?: string;
        } | {
            relation_property_name: string;
            rollup_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_name?: string;
            relation_property_id?: string;
        } | {
            rollup_property_id: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_name?: string;
            relation_property_name?: string;
        };
        type?: "rollup";
        name?: string;
    } | null | {
        title: Record<string, never>;
        type?: "title";
        name?: string;
    } | null | {
        rich_text: Record<string, never>;
        type?: "rich_text";
        name?: string;
    } | null | {
        url: Record<string, never>;
        type?: "url";
        name?: string;
    } | null | {
        people: Record<string, never>;
        type?: "people";
        name?: string;
    } | null | {
        files: Record<string, never>;
        type?: "files";
        name?: string;
    } | null | {
        email: Record<string, never>;
        type?: "email";
        name?: string;
    } | null | {
        phone_number: Record<string, never>;
        type?: "phone_number";
        name?: string;
    } | null | {
        date: Record<string, never>;
        type?: "date";
        name?: string;
    } | null | {
        checkbox: Record<string, never>;
        type?: "checkbox";
        name?: string;
    } | null | {
        created_by: Record<string, never>;
        type?: "created_by";
        name?: string;
    } | null | {
        created_time: Record<string, never>;
        type?: "created_time";
        name?: string;
    } | null | {
        last_edited_by: Record<string, never>;
        type?: "last_edited_by";
        name?: string;
    } | null | {
        last_edited_time: Record<string, never>;
        type?: "last_edited_time";
        name?: string;
    } | null | {
        name: string;
    } | null>;
};
export declare type UpdateDatabaseParameters = UpdateDatabasePathParameters & UpdateDatabaseBodyParameters;
export declare type UpdateDatabaseResponse = {
    title: Array<{
        type: "text";
        text: {
            content: string;
            link: {
                url: TextRequest;
            } | null;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "mention";
        mention: {
            type: "user";
            user: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            };
        } | {
            type: "page";
            page: {
                id: IdRequest;
            };
        } | {
            type: "database";
            database: {
                id: IdRequest;
            };
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "equation";
        equation: {
            expression: TextRequest;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    properties: Record<string, {
        type: "number";
        number: {
            format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
        };
        id: string;
        name: string;
    } | {
        type: "formula";
        formula: {
            expression: string;
        };
        id: string;
        name: string;
    } | {
        type: "select";
        select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "multi_select";
        multi_select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "relation";
        relation: {
            database_id: IdRequest;
            synced_property_id: string;
            synced_property_name: string;
        };
        id: string;
        name: string;
    } | {
        type: "rollup";
        rollup: {
            rollup_property_name: string;
            relation_property_name: string;
            rollup_property_id: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
        };
        id: string;
        name: string;
    } | {
        type: "title";
        title: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "rich_text";
        rich_text: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "url";
        url: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "people";
        people: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "files";
        files: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "email";
        email: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "phone_number";
        phone_number: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "date";
        date: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "checkbox";
        checkbox: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_by";
        created_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_time";
        created_time: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_by";
        last_edited_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_time";
        last_edited_time: Record<string, never>;
        id: string;
        name: string;
    }>;
    parent: {
        type: "page_id";
        page_id: string;
    } | {
        type: "workspace";
        workspace: true;
    };
    object: "database";
    id: string;
    created_time: string;
    last_edited_time: string;
    url: string;
};
export declare const updateDatabase: {
    readonly method: "patch";
    readonly pathParams: readonly ["database_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["title", "icon", "cover", "properties"];
    readonly path: (p: UpdateDatabasePathParameters) => string;
};
declare type QueryDatabasePathParameters = {
    database_id: IdRequest;
};
declare type QueryDatabaseBodyParameters = {
    sorts?: Array<{
        property: string;
        direction: "ascending" | "descending";
    } | {
        timestamp: "created_time" | "last_edited_time";
        direction: "ascending" | "descending";
    }>;
    filter?: {
        or: Array<{
            title: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "title";
        } | {
            text: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "text";
        } | {
            rich_text: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "rich_text";
        } | {
            number: {
                equals: number;
            } | {
                does_not_equal: number;
            } | {
                greater_than: number;
            } | {
                less_than: number;
            } | {
                greater_than_or_equal_to: number;
            } | {
                less_than_or_equal_to: number;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "number";
        } | {
            checkbox: {
                equals: boolean;
            } | {
                does_not_equal: boolean;
            };
            property: string;
            type?: "checkbox";
        } | {
            select: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "select";
        } | {
            multi_select: {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "multi_select";
        } | {
            date: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "date";
        } | {
            people: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "people";
        } | {
            files: {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "files";
        } | {
            url: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "url";
        } | {
            email: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "email";
        } | {
            phone: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "phone";
        } | {
            phone_number: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "phone_number";
        } | {
            relation: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "relation";
        } | {
            created_by: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "created_by";
        } | {
            created_time: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "created_time";
        } | {
            last_edited_by: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "last_edited_by";
        } | {
            last_edited_time: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "last_edited_time";
        } | {
            formula: {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
            property: string;
            type?: "formula";
        } | {
            rollup: {
                any: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                none: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                every: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
            property: string;
            type?: "rollup";
        } | {
            or: Array<{
                title: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "title";
            } | {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "text";
            } | {
                rich_text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "rich_text";
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "number";
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
                property: string;
                type?: "checkbox";
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "select";
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "multi_select";
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "date";
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "people";
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "files";
            } | {
                url: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "url";
            } | {
                email: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "email";
            } | {
                phone: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone";
            } | {
                phone_number: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone_number";
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "relation";
            } | {
                created_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_by";
            } | {
                created_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_time";
            } | {
                last_edited_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_by";
            } | {
                last_edited_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_time";
            } | {
                formula: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "formula";
            } | {
                rollup: {
                    any: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    none: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    every: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "rollup";
            }>;
        } | {
            and: Array<{
                title: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "title";
            } | {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "text";
            } | {
                rich_text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "rich_text";
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "number";
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
                property: string;
                type?: "checkbox";
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "select";
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "multi_select";
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "date";
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "people";
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "files";
            } | {
                url: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "url";
            } | {
                email: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "email";
            } | {
                phone: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone";
            } | {
                phone_number: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone_number";
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "relation";
            } | {
                created_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_by";
            } | {
                created_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_time";
            } | {
                last_edited_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_by";
            } | {
                last_edited_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_time";
            } | {
                formula: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "formula";
            } | {
                rollup: {
                    any: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    none: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    every: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "rollup";
            }>;
        }>;
    } | {
        and: Array<{
            title: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "title";
        } | {
            text: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "text";
        } | {
            rich_text: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "rich_text";
        } | {
            number: {
                equals: number;
            } | {
                does_not_equal: number;
            } | {
                greater_than: number;
            } | {
                less_than: number;
            } | {
                greater_than_or_equal_to: number;
            } | {
                less_than_or_equal_to: number;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "number";
        } | {
            checkbox: {
                equals: boolean;
            } | {
                does_not_equal: boolean;
            };
            property: string;
            type?: "checkbox";
        } | {
            select: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "select";
        } | {
            multi_select: {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "multi_select";
        } | {
            date: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "date";
        } | {
            people: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "people";
        } | {
            files: {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "files";
        } | {
            url: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "url";
        } | {
            email: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "email";
        } | {
            phone: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "phone";
        } | {
            phone_number: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "phone_number";
        } | {
            relation: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "relation";
        } | {
            created_by: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "created_by";
        } | {
            created_time: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "created_time";
        } | {
            last_edited_by: {
                contains: IdRequest;
            } | {
                does_not_contain: IdRequest;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "last_edited_by";
        } | {
            last_edited_time: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
            property: string;
            type?: "last_edited_time";
        } | {
            formula: {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
            property: string;
            type?: "formula";
        } | {
            rollup: {
                any: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                none: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                every: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    select: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    multi_select: {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    relation: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    people: {
                        contains: IdRequest;
                    } | {
                        does_not_contain: IdRequest;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    files: {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
            property: string;
            type?: "rollup";
        } | {
            or: Array<{
                title: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "title";
            } | {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "text";
            } | {
                rich_text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "rich_text";
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "number";
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
                property: string;
                type?: "checkbox";
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "select";
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "multi_select";
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "date";
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "people";
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "files";
            } | {
                url: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "url";
            } | {
                email: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "email";
            } | {
                phone: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone";
            } | {
                phone_number: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone_number";
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "relation";
            } | {
                created_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_by";
            } | {
                created_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_time";
            } | {
                last_edited_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_by";
            } | {
                last_edited_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_time";
            } | {
                formula: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "formula";
            } | {
                rollup: {
                    any: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    none: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    every: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "rollup";
            }>;
        } | {
            and: Array<{
                title: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "title";
            } | {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "text";
            } | {
                rich_text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "rich_text";
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "number";
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
                property: string;
                type?: "checkbox";
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "select";
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "multi_select";
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "date";
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "people";
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "files";
            } | {
                url: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "url";
            } | {
                email: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "email";
            } | {
                phone: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone";
            } | {
                phone_number: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "phone_number";
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "relation";
            } | {
                created_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_by";
            } | {
                created_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "created_time";
            } | {
                last_edited_by: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_by";
            } | {
                last_edited_time: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
                property: string;
                type?: "last_edited_time";
            } | {
                formula: {
                    text: {
                        equals: string;
                    } | {
                        does_not_equal: string;
                    } | {
                        contains: string;
                    } | {
                        does_not_contain: string;
                    } | {
                        starts_with: string;
                    } | {
                        ends_with: string;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    checkbox: {
                        equals: boolean;
                    } | {
                        does_not_equal: boolean;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "formula";
            } | {
                rollup: {
                    any: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    none: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    every: {
                        text: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            starts_with: string;
                        } | {
                            ends_with: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        number: {
                            equals: number;
                        } | {
                            does_not_equal: number;
                        } | {
                            greater_than: number;
                        } | {
                            less_than: number;
                        } | {
                            greater_than_or_equal_to: number;
                        } | {
                            less_than_or_equal_to: number;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        checkbox: {
                            equals: boolean;
                        } | {
                            does_not_equal: boolean;
                        };
                    } | {
                        select: {
                            equals: string;
                        } | {
                            does_not_equal: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        multi_select: {
                            contains: string;
                        } | {
                            does_not_contain: string;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        relation: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        date: {
                            equals: string;
                        } | {
                            before: string;
                        } | {
                            after: string;
                        } | {
                            on_or_before: string;
                        } | {
                            on_or_after: string;
                        } | {
                            past_week: Record<string, never>;
                        } | {
                            past_month: Record<string, never>;
                        } | {
                            past_year: Record<string, never>;
                        } | {
                            next_week: Record<string, never>;
                        } | {
                            next_month: Record<string, never>;
                        } | {
                            next_year: Record<string, never>;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        people: {
                            contains: IdRequest;
                        } | {
                            does_not_contain: IdRequest;
                        } | {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    } | {
                        files: {
                            is_empty: true;
                        } | {
                            is_not_empty: true;
                        };
                    };
                } | {
                    date: {
                        equals: string;
                    } | {
                        before: string;
                    } | {
                        after: string;
                    } | {
                        on_or_before: string;
                    } | {
                        on_or_after: string;
                    } | {
                        past_week: Record<string, never>;
                    } | {
                        past_month: Record<string, never>;
                    } | {
                        past_year: Record<string, never>;
                    } | {
                        next_week: Record<string, never>;
                    } | {
                        next_month: Record<string, never>;
                    } | {
                        next_year: Record<string, never>;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                } | {
                    number: {
                        equals: number;
                    } | {
                        does_not_equal: number;
                    } | {
                        greater_than: number;
                    } | {
                        less_than: number;
                    } | {
                        greater_than_or_equal_to: number;
                    } | {
                        less_than_or_equal_to: number;
                    } | {
                        is_empty: true;
                    } | {
                        is_not_empty: true;
                    };
                };
                property: string;
                type?: "rollup";
            }>;
        }>;
    } | {
        title: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "title";
    } | {
        text: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "text";
    } | {
        rich_text: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "rich_text";
    } | {
        number: {
            equals: number;
        } | {
            does_not_equal: number;
        } | {
            greater_than: number;
        } | {
            less_than: number;
        } | {
            greater_than_or_equal_to: number;
        } | {
            less_than_or_equal_to: number;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "number";
    } | {
        checkbox: {
            equals: boolean;
        } | {
            does_not_equal: boolean;
        };
        property: string;
        type?: "checkbox";
    } | {
        select: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "select";
    } | {
        multi_select: {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "multi_select";
    } | {
        date: {
            equals: string;
        } | {
            before: string;
        } | {
            after: string;
        } | {
            on_or_before: string;
        } | {
            on_or_after: string;
        } | {
            past_week: Record<string, never>;
        } | {
            past_month: Record<string, never>;
        } | {
            past_year: Record<string, never>;
        } | {
            next_week: Record<string, never>;
        } | {
            next_month: Record<string, never>;
        } | {
            next_year: Record<string, never>;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "date";
    } | {
        people: {
            contains: IdRequest;
        } | {
            does_not_contain: IdRequest;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "people";
    } | {
        files: {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "files";
    } | {
        url: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "url";
    } | {
        email: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "email";
    } | {
        phone: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "phone";
    } | {
        phone_number: {
            equals: string;
        } | {
            does_not_equal: string;
        } | {
            contains: string;
        } | {
            does_not_contain: string;
        } | {
            starts_with: string;
        } | {
            ends_with: string;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "phone_number";
    } | {
        relation: {
            contains: IdRequest;
        } | {
            does_not_contain: IdRequest;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "relation";
    } | {
        created_by: {
            contains: IdRequest;
        } | {
            does_not_contain: IdRequest;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "created_by";
    } | {
        created_time: {
            equals: string;
        } | {
            before: string;
        } | {
            after: string;
        } | {
            on_or_before: string;
        } | {
            on_or_after: string;
        } | {
            past_week: Record<string, never>;
        } | {
            past_month: Record<string, never>;
        } | {
            past_year: Record<string, never>;
        } | {
            next_week: Record<string, never>;
        } | {
            next_month: Record<string, never>;
        } | {
            next_year: Record<string, never>;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "created_time";
    } | {
        last_edited_by: {
            contains: IdRequest;
        } | {
            does_not_contain: IdRequest;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "last_edited_by";
    } | {
        last_edited_time: {
            equals: string;
        } | {
            before: string;
        } | {
            after: string;
        } | {
            on_or_before: string;
        } | {
            on_or_after: string;
        } | {
            past_week: Record<string, never>;
        } | {
            past_month: Record<string, never>;
        } | {
            past_year: Record<string, never>;
        } | {
            next_week: Record<string, never>;
        } | {
            next_month: Record<string, never>;
        } | {
            next_year: Record<string, never>;
        } | {
            is_empty: true;
        } | {
            is_not_empty: true;
        };
        property: string;
        type?: "last_edited_time";
    } | {
        formula: {
            text: {
                equals: string;
            } | {
                does_not_equal: string;
            } | {
                contains: string;
            } | {
                does_not_contain: string;
            } | {
                starts_with: string;
            } | {
                ends_with: string;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
        } | {
            checkbox: {
                equals: boolean;
            } | {
                does_not_equal: boolean;
            };
        } | {
            number: {
                equals: number;
            } | {
                does_not_equal: number;
            } | {
                greater_than: number;
            } | {
                less_than: number;
            } | {
                greater_than_or_equal_to: number;
            } | {
                less_than_or_equal_to: number;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
        } | {
            date: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
        };
        property: string;
        type?: "formula";
    } | {
        rollup: {
            any: {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
        } | {
            none: {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
        } | {
            every: {
                text: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    starts_with: string;
                } | {
                    ends_with: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                number: {
                    equals: number;
                } | {
                    does_not_equal: number;
                } | {
                    greater_than: number;
                } | {
                    less_than: number;
                } | {
                    greater_than_or_equal_to: number;
                } | {
                    less_than_or_equal_to: number;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                checkbox: {
                    equals: boolean;
                } | {
                    does_not_equal: boolean;
                };
            } | {
                select: {
                    equals: string;
                } | {
                    does_not_equal: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                multi_select: {
                    contains: string;
                } | {
                    does_not_contain: string;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                relation: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                date: {
                    equals: string;
                } | {
                    before: string;
                } | {
                    after: string;
                } | {
                    on_or_before: string;
                } | {
                    on_or_after: string;
                } | {
                    past_week: Record<string, never>;
                } | {
                    past_month: Record<string, never>;
                } | {
                    past_year: Record<string, never>;
                } | {
                    next_week: Record<string, never>;
                } | {
                    next_month: Record<string, never>;
                } | {
                    next_year: Record<string, never>;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                people: {
                    contains: IdRequest;
                } | {
                    does_not_contain: IdRequest;
                } | {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            } | {
                files: {
                    is_empty: true;
                } | {
                    is_not_empty: true;
                };
            };
        } | {
            date: {
                equals: string;
            } | {
                before: string;
            } | {
                after: string;
            } | {
                on_or_before: string;
            } | {
                on_or_after: string;
            } | {
                past_week: Record<string, never>;
            } | {
                past_month: Record<string, never>;
            } | {
                past_year: Record<string, never>;
            } | {
                next_week: Record<string, never>;
            } | {
                next_month: Record<string, never>;
            } | {
                next_year: Record<string, never>;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
        } | {
            number: {
                equals: number;
            } | {
                does_not_equal: number;
            } | {
                greater_than: number;
            } | {
                less_than: number;
            } | {
                greater_than_or_equal_to: number;
            } | {
                less_than_or_equal_to: number;
            } | {
                is_empty: true;
            } | {
                is_not_empty: true;
            };
        };
        property: string;
        type?: "rollup";
    };
    start_cursor?: string;
    page_size?: number;
    archived?: boolean;
};
export declare type QueryDatabaseParameters = QueryDatabasePathParameters & QueryDatabaseBodyParameters;
export declare type QueryDatabaseResponse = {
    object: "list";
    results: Array<{
        parent: {
            type: "database_id";
            database_id: IdRequest;
        } | {
            type: "page_id";
            page_id: IdRequest;
        } | {
            type: "workspace";
            workspace: true;
        };
        properties: Record<string, {
            type: "title";
            title: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            id: string;
        } | {
            type: "rich_text";
            rich_text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            id: string;
        } | {
            type: "number";
            number: number;
            id: string;
        } | {
            type: "url";
            url: string;
            id: string;
        } | {
            type: "select";
            select: {
                id: StringRequest;
                name: StringRequest;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            };
            id: string;
        } | {
            type: "multi_select";
            multi_select: Array<{
                id: StringRequest;
                name: StringRequest;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
            id: string;
        } | {
            type: "people";
            people: Array<{
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            }>;
            id: string;
        } | {
            type: "email";
            email: string;
            id: string;
        } | {
            type: "phone_number";
            phone_number: string;
            id: string;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            };
            id: string;
        } | {
            type: "files";
            files: Array<{
                file: {
                    url: string;
                    expiry_time: string;
                };
                name: string;
                type?: "file";
            } | {
                external: {
                    url: string;
                };
                name: string;
                type?: "external";
            }>;
            id: string;
        } | {
            type: "checkbox";
            checkbox: boolean;
            id: string;
        } | {
            type: "formula";
            formula: {
                type: "string";
                string: string | null;
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                } | null;
            } | {
                type: "number";
                number: number | null;
            } | {
                type: "boolean";
                boolean: boolean | null;
            };
            id: string;
        } | {
            type: "relation";
            relation: Array<{
                id: string;
            }>;
            id: string;
        } | {
            type: "rollup";
            rollup: {
                type: "number";
                number: number | null;
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                } | null;
            } | {
                type: "array";
                array: Array<{
                    type: "number";
                    number: {
                        format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
                    };
                } | {
                    type: "formula";
                    formula: {
                        expression: string;
                    };
                } | {
                    type: "select";
                    select: {
                        options: Array<{
                            name: StringRequest;
                            id?: StringRequest;
                            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                        }>;
                    };
                } | {
                    type: "multi_select";
                    multi_select: {
                        options: Array<{
                            name: StringRequest;
                            id?: StringRequest;
                            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                        }>;
                    };
                } | {
                    type: "relation";
                    relation: {
                        database_id: IdRequest;
                        synced_property_id: string;
                        synced_property_name: string;
                    };
                } | {
                    type: "rollup";
                    rollup: {
                        rollup_property_name: string;
                        relation_property_name: string;
                        rollup_property_id: string;
                        relation_property_id: string;
                        function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
                    };
                } | {
                    type: "title";
                    title: Record<string, never>;
                } | {
                    type: "rich_text";
                    rich_text: Record<string, never>;
                } | {
                    type: "url";
                    url: Record<string, never>;
                } | {
                    type: "people";
                    people: Record<string, never>;
                } | {
                    type: "files";
                    files: Record<string, never>;
                } | {
                    type: "email";
                    email: Record<string, never>;
                } | {
                    type: "phone_number";
                    phone_number: Record<string, never>;
                } | {
                    type: "date";
                    date: Record<string, never>;
                } | {
                    type: "checkbox";
                    checkbox: Record<string, never>;
                } | {
                    type: "created_by";
                    created_by: Record<string, never>;
                } | {
                    type: "created_time";
                    created_time: Record<string, never>;
                } | {
                    type: "last_edited_by";
                    last_edited_by: Record<string, never>;
                } | {
                    type: "last_edited_time";
                    last_edited_time: Record<string, never>;
                }>;
            };
            id: string;
        } | {
            type: "created_time";
            created_time: string;
            id: string;
        } | {
            type: "created_by";
            created_by: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
            id: string;
        } | {
            type: "last_edited_time";
            last_edited_time: string;
            id: string;
        } | {
            type: "last_edited_by";
            last_edited_by: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
            id: string;
        }>;
        icon: {
            type: "emoji";
            emoji: string;
        } | null | {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        cover: {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        object: "page";
        id: string;
        created_time: string;
        last_edited_time: string;
        archived: boolean;
        url: string;
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const queryDatabase: {
    readonly method: "post";
    readonly pathParams: readonly ["database_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["sorts", "filter", "start_cursor", "page_size", "archived"];
    readonly path: (p: QueryDatabasePathParameters) => string;
};
declare type ListDatabasesQueryParameters = {
    start_cursor?: string;
    page_size?: number;
};
export declare type ListDatabasesParameters = ListDatabasesQueryParameters;
export declare type ListDatabasesResponse = {
    object: "list";
    results: Array<{
        title: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        icon: {
            type: "emoji";
            emoji: string;
        } | null | {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        cover: {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        properties: Record<string, {
            type: "number";
            number: {
                format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
            };
            id: string;
            name: string;
        } | {
            type: "formula";
            formula: {
                expression: string;
            };
            id: string;
            name: string;
        } | {
            type: "select";
            select: {
                options: Array<{
                    name: StringRequest;
                    id?: StringRequest;
                    color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                }>;
            };
            id: string;
            name: string;
        } | {
            type: "multi_select";
            multi_select: {
                options: Array<{
                    name: StringRequest;
                    id?: StringRequest;
                    color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                }>;
            };
            id: string;
            name: string;
        } | {
            type: "relation";
            relation: {
                database_id: IdRequest;
                synced_property_id: string;
                synced_property_name: string;
            };
            id: string;
            name: string;
        } | {
            type: "rollup";
            rollup: {
                rollup_property_name: string;
                relation_property_name: string;
                rollup_property_id: string;
                relation_property_id: string;
                function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            };
            id: string;
            name: string;
        } | {
            type: "title";
            title: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "rich_text";
            rich_text: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "url";
            url: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "people";
            people: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "files";
            files: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "email";
            email: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "phone_number";
            phone_number: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "date";
            date: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "checkbox";
            checkbox: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "created_by";
            created_by: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "created_time";
            created_time: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "last_edited_by";
            last_edited_by: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "last_edited_time";
            last_edited_time: Record<string, never>;
            id: string;
            name: string;
        }>;
        parent: {
            type: "page_id";
            page_id: string;
        } | {
            type: "workspace";
            workspace: true;
        };
        object: "database";
        id: string;
        created_time: string;
        last_edited_time: string;
        url: string;
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const listDatabases: {
    readonly method: "get";
    readonly pathParams: readonly [];
    readonly queryParams: readonly ["start_cursor", "page_size"];
    readonly bodyParams: readonly [];
    readonly path: () => string;
};
declare type CreateDatabaseBodyParameters = {
    parent: {
        page_id: IdRequest;
        type?: "page_id";
    };
    properties: Record<string, {
        number: {
            format?: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
        };
        type?: "number";
    } | {
        formula: {
            expression?: string;
        };
        type?: "formula";
    } | {
        select: {
            options?: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        type?: "select";
    } | {
        multi_select: {
            options?: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        type?: "multi_select";
    } | {
        relation: {
            database_id: IdRequest;
            synced_property_id?: string;
            synced_property_name?: string;
        };
        type?: "relation";
    } | {
        rollup: {
            rollup_property_name: string;
            relation_property_name: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_id?: string;
            relation_property_id?: string;
        } | {
            rollup_property_name: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            relation_property_name?: string;
            rollup_property_id?: string;
        } | {
            relation_property_name: string;
            rollup_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_name?: string;
            relation_property_id?: string;
        } | {
            rollup_property_id: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            rollup_property_name?: string;
            relation_property_name?: string;
        };
        type?: "rollup";
    } | {
        title: Record<string, never>;
        type?: "title";
    } | {
        rich_text: Record<string, never>;
        type?: "rich_text";
    } | {
        url: Record<string, never>;
        type?: "url";
    } | {
        people: Record<string, never>;
        type?: "people";
    } | {
        files: Record<string, never>;
        type?: "files";
    } | {
        email: Record<string, never>;
        type?: "email";
    } | {
        phone_number: Record<string, never>;
        type?: "phone_number";
    } | {
        date: Record<string, never>;
        type?: "date";
    } | {
        checkbox: Record<string, never>;
        type?: "checkbox";
    } | {
        created_by: Record<string, never>;
        type?: "created_by";
    } | {
        created_time: Record<string, never>;
        type?: "created_time";
    } | {
        last_edited_by: Record<string, never>;
        type?: "last_edited_by";
    } | {
        last_edited_time: Record<string, never>;
        type?: "last_edited_time";
    }>;
    icon?: {
        emoji: string;
        type?: "emoji";
    } | null | {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    cover?: {
        external: {
            url: string;
        };
        type?: "external";
    } | null;
    title?: Array<RichTextItemRequest>;
};
export declare type CreateDatabaseParameters = CreateDatabaseBodyParameters;
export declare type CreateDatabaseResponse = {
    title: Array<{
        type: "text";
        text: {
            content: string;
            link: {
                url: TextRequest;
            } | null;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "mention";
        mention: {
            type: "user";
            user: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            };
        } | {
            type: "page";
            page: {
                id: IdRequest;
            };
        } | {
            type: "database";
            database: {
                id: IdRequest;
            };
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    } | {
        type: "equation";
        equation: {
            expression: TextRequest;
        };
        annotations: {
            bold: boolean;
            italic: boolean;
            strikethrough: boolean;
            underline: boolean;
            code: boolean;
            color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
        };
        plain_text: string;
        href: string | null;
    }>;
    icon: {
        type: "emoji";
        emoji: string;
    } | null | {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    cover: {
        type: "external";
        external: {
            url: string;
        };
    } | null | {
        type: "file";
        file: {
            url: string;
            expiry_time: string;
        };
    } | null;
    properties: Record<string, {
        type: "number";
        number: {
            format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
        };
        id: string;
        name: string;
    } | {
        type: "formula";
        formula: {
            expression: string;
        };
        id: string;
        name: string;
    } | {
        type: "select";
        select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "multi_select";
        multi_select: {
            options: Array<{
                name: StringRequest;
                id?: StringRequest;
                color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
        };
        id: string;
        name: string;
    } | {
        type: "relation";
        relation: {
            database_id: IdRequest;
            synced_property_id: string;
            synced_property_name: string;
        };
        id: string;
        name: string;
    } | {
        type: "rollup";
        rollup: {
            rollup_property_name: string;
            relation_property_name: string;
            rollup_property_id: string;
            relation_property_id: string;
            function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
        };
        id: string;
        name: string;
    } | {
        type: "title";
        title: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "rich_text";
        rich_text: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "url";
        url: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "people";
        people: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "files";
        files: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "email";
        email: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "phone_number";
        phone_number: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "date";
        date: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "checkbox";
        checkbox: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_by";
        created_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "created_time";
        created_time: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_by";
        last_edited_by: Record<string, never>;
        id: string;
        name: string;
    } | {
        type: "last_edited_time";
        last_edited_time: Record<string, never>;
        id: string;
        name: string;
    }>;
    parent: {
        type: "page_id";
        page_id: string;
    } | {
        type: "workspace";
        workspace: true;
    };
    object: "database";
    id: string;
    created_time: string;
    last_edited_time: string;
    url: string;
};
export declare const createDatabase: {
    readonly method: "post";
    readonly pathParams: readonly [];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["parent", "properties", "icon", "cover", "title"];
    readonly path: () => string;
};
declare type SearchBodyParameters = {
    sort?: {
        timestamp: "last_edited_time";
        direction: "ascending" | "descending";
    };
    query?: string;
    start_cursor?: string;
    page_size?: number;
    filter?: {
        property: "object";
        value: "page" | "database";
    };
};
export declare type SearchParameters = SearchBodyParameters;
export declare type SearchResponse = {
    object: "list";
    results: Array<{
        parent: {
            type: "database_id";
            database_id: IdRequest;
        } | {
            type: "page_id";
            page_id: IdRequest;
        } | {
            type: "workspace";
            workspace: true;
        };
        properties: Record<string, {
            type: "title";
            title: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            id: string;
        } | {
            type: "rich_text";
            rich_text: Array<{
                type: "text";
                text: {
                    content: string;
                    link: {
                        url: TextRequest;
                    } | null;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "mention";
                mention: {
                    type: "user";
                    user: {
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "person";
                        person: {
                            email: string;
                        };
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    } | {
                        type: "bot";
                        bot: Record<string, never>;
                        name: string | null;
                        avatar_url: string | null;
                        id: IdRequest;
                        object: "user";
                    };
                } | {
                    type: "date";
                    date: {
                        start: string;
                        end: string | null;
                    };
                } | {
                    type: "page";
                    page: {
                        id: IdRequest;
                    };
                } | {
                    type: "database";
                    database: {
                        id: IdRequest;
                    };
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            } | {
                type: "equation";
                equation: {
                    expression: TextRequest;
                };
                annotations: {
                    bold: boolean;
                    italic: boolean;
                    strikethrough: boolean;
                    underline: boolean;
                    code: boolean;
                    color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
                };
                plain_text: string;
                href: string | null;
            }>;
            id: string;
        } | {
            type: "number";
            number: number;
            id: string;
        } | {
            type: "url";
            url: string;
            id: string;
        } | {
            type: "select";
            select: {
                id: StringRequest;
                name: StringRequest;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            };
            id: string;
        } | {
            type: "multi_select";
            multi_select: Array<{
                id: StringRequest;
                name: StringRequest;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
            }>;
            id: string;
        } | {
            type: "people";
            people: Array<{
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            }>;
            id: string;
        } | {
            type: "email";
            email: string;
            id: string;
        } | {
            type: "phone_number";
            phone_number: string;
            id: string;
        } | {
            type: "date";
            date: {
                start: string;
                end: string | null;
            };
            id: string;
        } | {
            type: "files";
            files: Array<{
                file: {
                    url: string;
                    expiry_time: string;
                };
                name: string;
                type?: "file";
            } | {
                external: {
                    url: string;
                };
                name: string;
                type?: "external";
            }>;
            id: string;
        } | {
            type: "checkbox";
            checkbox: boolean;
            id: string;
        } | {
            type: "formula";
            formula: {
                type: "string";
                string: string | null;
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                } | null;
            } | {
                type: "number";
                number: number | null;
            } | {
                type: "boolean";
                boolean: boolean | null;
            };
            id: string;
        } | {
            type: "relation";
            relation: Array<{
                id: string;
            }>;
            id: string;
        } | {
            type: "rollup";
            rollup: {
                type: "number";
                number: number | null;
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                } | null;
            } | {
                type: "array";
                array: Array<{
                    type: "number";
                    number: {
                        format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
                    };
                } | {
                    type: "formula";
                    formula: {
                        expression: string;
                    };
                } | {
                    type: "select";
                    select: {
                        options: Array<{
                            name: StringRequest;
                            id?: StringRequest;
                            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                        }>;
                    };
                } | {
                    type: "multi_select";
                    multi_select: {
                        options: Array<{
                            name: StringRequest;
                            id?: StringRequest;
                            color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                        }>;
                    };
                } | {
                    type: "relation";
                    relation: {
                        database_id: IdRequest;
                        synced_property_id: string;
                        synced_property_name: string;
                    };
                } | {
                    type: "rollup";
                    rollup: {
                        rollup_property_name: string;
                        relation_property_name: string;
                        rollup_property_id: string;
                        relation_property_id: string;
                        function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
                    };
                } | {
                    type: "title";
                    title: Record<string, never>;
                } | {
                    type: "rich_text";
                    rich_text: Record<string, never>;
                } | {
                    type: "url";
                    url: Record<string, never>;
                } | {
                    type: "people";
                    people: Record<string, never>;
                } | {
                    type: "files";
                    files: Record<string, never>;
                } | {
                    type: "email";
                    email: Record<string, never>;
                } | {
                    type: "phone_number";
                    phone_number: Record<string, never>;
                } | {
                    type: "date";
                    date: Record<string, never>;
                } | {
                    type: "checkbox";
                    checkbox: Record<string, never>;
                } | {
                    type: "created_by";
                    created_by: Record<string, never>;
                } | {
                    type: "created_time";
                    created_time: Record<string, never>;
                } | {
                    type: "last_edited_by";
                    last_edited_by: Record<string, never>;
                } | {
                    type: "last_edited_time";
                    last_edited_time: Record<string, never>;
                }>;
            };
            id: string;
        } | {
            type: "created_time";
            created_time: string;
            id: string;
        } | {
            type: "created_by";
            created_by: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
            id: string;
        } | {
            type: "last_edited_time";
            last_edited_time: string;
            id: string;
        } | {
            type: "last_edited_by";
            last_edited_by: {
                id: IdRequest;
                object: "user";
            } | {
                type: "person";
                person: {
                    email: string;
                };
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            } | {
                type: "bot";
                bot: Record<string, never>;
                name: string | null;
                avatar_url: string | null;
                id: IdRequest;
                object: "user";
            };
            id: string;
        }>;
        icon: {
            type: "emoji";
            emoji: string;
        } | null | {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        cover: {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        object: "page";
        id: string;
        created_time: string;
        last_edited_time: string;
        archived: boolean;
        url: string;
    } | {
        title: Array<{
            type: "text";
            text: {
                content: string;
                link: {
                    url: TextRequest;
                } | null;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "mention";
            mention: {
                type: "user";
                user: {
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "person";
                    person: {
                        email: string;
                    };
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                } | {
                    type: "bot";
                    bot: Record<string, never>;
                    name: string | null;
                    avatar_url: string | null;
                    id: IdRequest;
                    object: "user";
                };
            } | {
                type: "date";
                date: {
                    start: string;
                    end: string | null;
                };
            } | {
                type: "page";
                page: {
                    id: IdRequest;
                };
            } | {
                type: "database";
                database: {
                    id: IdRequest;
                };
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        } | {
            type: "equation";
            equation: {
                expression: TextRequest;
            };
            annotations: {
                bold: boolean;
                italic: boolean;
                strikethrough: boolean;
                underline: boolean;
                code: boolean;
                color: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red" | "gray_background" | "brown_background" | "orange_background" | "yellow_background" | "green_background" | "blue_background" | "purple_background" | "pink_background" | "red_background";
            };
            plain_text: string;
            href: string | null;
        }>;
        icon: {
            type: "emoji";
            emoji: string;
        } | null | {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        cover: {
            type: "external";
            external: {
                url: string;
            };
        } | null | {
            type: "file";
            file: {
                url: string;
                expiry_time: string;
            };
        } | null;
        properties: Record<string, {
            type: "number";
            number: {
                format: "number" | "number_with_commas" | "percent" | "dollar" | "canadian_dollar" | "euro" | "pound" | "yen" | "ruble" | "rupee" | "won" | "yuan" | "real" | "lira" | "rupiah" | "franc" | "hong_kong_dollar" | "new_zealand_dollar" | "krona" | "norwegian_krone" | "mexican_peso" | "rand" | "new_taiwan_dollar" | "danish_krone" | "zloty" | "baht" | "forint" | "koruna" | "shekel" | "chilean_peso" | "philippine_peso" | "dirham" | "colombian_peso" | "riyal" | "ringgit" | "leu";
            };
            id: string;
            name: string;
        } | {
            type: "formula";
            formula: {
                expression: string;
            };
            id: string;
            name: string;
        } | {
            type: "select";
            select: {
                options: Array<{
                    name: StringRequest;
                    id?: StringRequest;
                    color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                }>;
            };
            id: string;
            name: string;
        } | {
            type: "multi_select";
            multi_select: {
                options: Array<{
                    name: StringRequest;
                    id?: StringRequest;
                    color?: "default" | "gray" | "brown" | "orange" | "yellow" | "green" | "blue" | "purple" | "pink" | "red";
                }>;
            };
            id: string;
            name: string;
        } | {
            type: "relation";
            relation: {
                database_id: IdRequest;
                synced_property_id: string;
                synced_property_name: string;
            };
            id: string;
            name: string;
        } | {
            type: "rollup";
            rollup: {
                rollup_property_name: string;
                relation_property_name: string;
                rollup_property_id: string;
                relation_property_id: string;
                function: "count" | "count_values" | "empty" | "not_empty" | "unique" | "show_unique" | "percent_empty" | "percent_not_empty" | "sum" | "average" | "median" | "min" | "max" | "range" | "earliest_date" | "latest_date" | "date_range" | "checked" | "unchecked" | "percent_checked" | "percent_unchecked" | "show_original";
            };
            id: string;
            name: string;
        } | {
            type: "title";
            title: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "rich_text";
            rich_text: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "url";
            url: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "people";
            people: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "files";
            files: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "email";
            email: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "phone_number";
            phone_number: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "date";
            date: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "checkbox";
            checkbox: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "created_by";
            created_by: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "created_time";
            created_time: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "last_edited_by";
            last_edited_by: Record<string, never>;
            id: string;
            name: string;
        } | {
            type: "last_edited_time";
            last_edited_time: Record<string, never>;
            id: string;
            name: string;
        }>;
        parent: {
            type: "page_id";
            page_id: string;
        } | {
            type: "workspace";
            workspace: true;
        };
        object: "database";
        id: string;
        created_time: string;
        last_edited_time: string;
        url: string;
    }>;
    next_cursor: string | null;
    has_more: boolean;
};
export declare const search: {
    readonly method: "post";
    readonly pathParams: readonly [];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["sort", "query", "start_cursor", "page_size", "filter"];
    readonly path: () => string;
};
export {};
//# sourceMappingURL=api-endpoints.d.ts.map